/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZlpBalance, ZlpBalanceInterface } from "../ZlpBalance";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IZlpManager",
        name: "_zlpManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakedZlpTracker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedZlpTracker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zlpManager",
    outputs: [
      {
        internalType: "contract IZlpManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161088a38038061088a8339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b031991821617909155600180549390921692169190911790556108108061007a6000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c8063095ea7b31461007257806317988a6a146100b257806323b872dd146100d657806355b6ed5c1461010c578063a9059cbb1461014c578063b655659914610178578063dd62ed3e14610180575b600080fd5b61009e6004803603604081101561008857600080fd5b506001600160a01b0381351690602001356101ae565b604080519115158252519081900360200190f35b6100ba6101c4565b604080516001600160a01b039092168252519081900360200190f35b61009e600480360360608110156100ec57600080fd5b506001600160a01b038135811691602081013590911690604001356101d3565b61013a6004803603604081101561012257600080fd5b506001600160a01b0381358116916020013516610241565b60408051918252519081900360200190f35b61009e6004803603604081101561016257600080fd5b506001600160a01b03813516906020013561025e565b6100ba61026b565b61013a6004803603604081101561019657600080fd5b506001600160a01b038135811691602001351661027a565b60006101bb3384846102a5565b50600192915050565b6001546001600160a01b031681565b60008061021e836040518060600160405280602d8152602001610787602d91396001600160a01b03881660009081526002602090815260408083203384529091529020549190610391565b905061022b8533836102a5565b610236858585610428565b506001949350505050565b600260209081526000928352604080842090915290825290205481565b60006101bb338484610428565b6000546001600160a01b031681565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b0383166102ea5760405162461bcd60e51b81526004018080602001828103825260298152602001806106e06029913960400191505060405180910390fd5b6001600160a01b03821661032f5760405162461bcd60e51b81526004018080602001828103825260278152602001806107b46027913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600081848411156104205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103e55781810151838201526020016103cd565b50505050905090810190601f1680156104125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b03831661046d5760405162461bcd60e51b815260040180806020018281038252602a815260200180610731602a913960400191505060405180910390fd5b6001600160a01b0382166104b25760405162461bcd60e51b81526004018080602001828103825260288152602001806107096028913960400191505060405180910390fd5b426105b460008054906101000a90046001600160a01b03166001600160a01b031663352693156040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561050457600080fd5b505af1158015610518573d6000803e3d6000fd5b505050506040513d602081101561052e57600080fd5b50516000805460408051638b770e1160e01b81526001600160a01b038a8116600483015291519190921692638b770e1192602480820193602093909283900390910190829087803b15801561058257600080fd5b505af1158015610596573d6000803e3d6000fd5b505050506040513d60208110156105ac57600080fd5b505190610680565b11156105f15760405162461bcd60e51b815260040180806020018281038252602c81526020018061075b602c913960400191505060405180910390fd5b600154604080516323b872dd60e01b81526001600160a01b038681166004830152858116602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b15801561064f57600080fd5b505af1158015610663573d6000803e3d6000fd5b505050506040513d602081101561067957600080fd5b5050505050565b6000828201838110156106d8576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b939250505056fe5a6c7042616c616e63653a20617070726f76652066726f6d20746865207a65726f20616464726573735a6c7042616c616e63653a207472616e7366657220746f20746865207a65726f20616464726573735a6c7042616c616e63653a207472616e736665722066726f6d20746865207a65726f20616464726573735a6c7042616c616e63653a20636f6f6c646f776e206475726174696f6e206e6f7420796574207061737365645a6c7042616c616e63653a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63655a6c7042616c616e63653a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220421d5a48517f1db429a0a4cea11fdf9d974d3570284833983fadaf813740f4ba64736f6c634300060c0033";

export class ZlpBalance__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _zlpManager: string,
    _stakedZlpTracker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZlpBalance> {
    return super.deploy(
      _zlpManager,
      _stakedZlpTracker,
      overrides || {}
    ) as Promise<ZlpBalance>;
  }
  getDeployTransaction(
    _zlpManager: string,
    _stakedZlpTracker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _zlpManager,
      _stakedZlpTracker,
      overrides || {}
    );
  }
  attach(address: string): ZlpBalance {
    return super.attach(address) as ZlpBalance;
  }
  connect(signer: Signer): ZlpBalance__factory {
    return super.connect(signer) as ZlpBalance__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZlpBalanceInterface {
    return new utils.Interface(_abi) as ZlpBalanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZlpBalance {
    return new Contract(address, _abi, signerOrProvider) as ZlpBalance;
  }
}
