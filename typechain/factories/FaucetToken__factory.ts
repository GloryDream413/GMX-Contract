/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FaucetToken, FaucetTokenInterface } from "../FaucetToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "dropletAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DROPLET_INTERVAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_claimedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_dropletAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_isFaucetEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimDroplet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableFaucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableFaucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dropletAmount",
        type: "uint256",
      },
    ],
    name: "setDropletAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526170806000553480156200001757600080fd5b506040516200117238038062001172833981810160405260808110156200003d57600080fd5b81019080805160405193929190846401000000008211156200005e57600080fd5b9083019060208201858111156200007457600080fd5b82516401000000008111828201881017156200008f57600080fd5b82525081516020918201929091019080838360005b83811015620000be578181015183820152602001620000a4565b50505050905090810190601f168015620000ec5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011057600080fd5b9083019060208201858111156200012657600080fd5b82516401000000008111828201881017156200014157600080fd5b82525081516020918201929091019080838360005b838110156200017057818101518382015260200162000156565b50505050905090810190601f1680156200019e5780820380516001836020036101000a031916815260200191505b506040908152602082810151929091015186519294509250620001c79160069187019062000212565b508251620001dd90600790602086019062000212565b506008805460ff90931660ff1990931692909217909155600180546001600160a01b0319163317905560025550620002ae9050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025557805160ff191683800117855562000285565b8280016001018555821562000285579182015b828111156200028557825182559160200191906001019062000268565b506200029392915062000297565b5090565b5b8082111562000293576000815560010162000298565b610eb480620002be6000396000f3fe608060405234801561001057600080fd5b50600436106101075760003560e01c806306fdde031461010c578063095ea7b31461018957806318160ddd146101c957806323b872dd146101e3578063309ef25214610219578063313ce5671461023f578063395093511461025d57806340c10f1914610289578063458a7c36146102b757806363878f16146102bf57806370a08231146102e3578063944d3c2a1461030957806395d89b4114610311578063a1c2fb0c14610319578063a457c2d714610321578063a9059cbb1461034d578063bd13644814610379578063c7c7dee514610381578063d08f8b3f14610389578063dd62ed3e146103a6578063e6511743146103d4575b600080fd5b6101146103dc565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014e578181015183820152602001610136565b50505050905090810190601f16801561017b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b56004803603604081101561019f57600080fd5b506001600160a01b038135169060200135610472565b604080519115158252519081900360200190f35b6101d161048f565b60408051918252519081900360200190f35b6101b5600480360360608110156101f957600080fd5b506001600160a01b03813581169160208101359091169060400135610495565b6101d16004803603602081101561022f57600080fd5b50356001600160a01b031661051c565b61024761052e565b6040805160ff9092168252519081900360200190f35b6101b56004803603604081101561027357600080fd5b506001600160a01b038135169060200135610537565b6102b56004803603604081101561029f57600080fd5b506001600160a01b038135169060200135610585565b005b6101d16105e0565b6102c76105e6565b604080516001600160a01b039092168252519081900360200190f35b6101d1600480360360208110156102f957600080fd5b50356001600160a01b03166105f5565b6102b5610610565b610114610669565b6101b56106ca565b6101b56004803603604081101561033757600080fd5b506001600160a01b0381351690602001356106d3565b6101b56004803603604081101561036357600080fd5b506001600160a01b03813516906020013561073b565b6101d161074f565b6102b5610755565b6102b56004803603602081101561039f57600080fd5b50356107b1565b6101d1600480360360408110156103bc57600080fd5b506001600160a01b0381358116916020013516610803565b6102b561082e565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104685780601f1061043d57610100808354040283529160200191610468565b820191906000526020600020905b81548152906001019060200180831161044b57829003601f168201915b5050505050905090565b600061048661047f610901565b8484610905565b50600192915050565b60055490565b60006104a28484846109f1565b610512846104ae610901565b61050d85604051806060016040528060288152602001610dc9602891396001600160a01b038a166000908152600a60205260408120906104ec610901565b6001600160a01b031681526020810191909152604001600020549190610b3c565b610905565b5060019392505050565b60046020526000908152604090205481565b60085460ff1690565b6000610486610544610901565b8461050d85600a6000610555610901565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610bd3565b6001546001600160a01b031633146105d2576040805162461bcd60e51b81526020600482015260166024820152600080516020610d5d833981519152604482015290519081900360640190fd5b6105dc8282610c32565b5050565b60025481565b6001546001600160a01b031681565b6001600160a01b031660009081526009602052604090205490565b6001546001600160a01b0316331461065d576040805162461bcd60e51b81526020600482015260166024820152600080516020610d5d833981519152604482015290519081900360640190fd5b6003805460ff19169055565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104685780601f1061043d57610100808354040283529160200191610468565b60035460ff1681565b60006104866106e0610901565b8461050d85604051806060016040528060258152602001610e5a60259139600a600061070a610901565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b3c565b6000610486610748610901565b84846109f1565b60005481565b6001546001600160a01b031633146107a2576040805162461bcd60e51b81526020600482015260166024820152600080516020610d5d833981519152604482015290519081900360640190fd5b6003805460ff19166001179055565b6001546001600160a01b031633146107fe576040805162461bcd60e51b81526020600482015260166024820152600080516020610d5d833981519152604482015290519081900360640190fd5b600255565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b60035460ff16610885576040805162461bcd60e51b815260206004820152601f60248201527f466175636574546f6b656e3a20666175636574206e6f7420656e61626c656400604482015290519081900360640190fd5b60008054338252600460205260409091205442916108a39190610bd3565b11156108e05760405162461bcd60e51b8152600401808060200182810382526026815260200180610d7d6026913960400191505060405180910390fd5b3360008181526004602052604090204290556002546108ff9190610c32565b565b3390565b6001600160a01b03831661094a5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e366024913960400191505060405180910390fd5b6001600160a01b03821661098f5760405162461bcd60e51b8152600401808060200182810382526022815260200180610d3b6022913960400191505060405180910390fd5b6001600160a01b038084166000818152600a6020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a365760405162461bcd60e51b8152600401808060200182810382526025815260200180610e116025913960400191505060405180910390fd5b6001600160a01b038216610a7b5760405162461bcd60e51b8152600401808060200182810382526023815260200180610d186023913960400191505060405180910390fd5b610a86838383610d12565b610ac381604051806060016040528060268152602001610da3602691396001600160a01b0386166000908152600960205260409020549190610b3c565b6001600160a01b038085166000908152600960205260408082209390935590841681522054610af29082610bd3565b6001600160a01b038084166000818152600960209081526040918290209490945580518581529051919392871692600080516020610df183398151915292918290030190a3505050565b60008184841115610bcb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b90578181015183820152602001610b78565b50505050905090810190601f168015610bbd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c2b576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c8d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610c9960008383610d12565b600554610ca69082610bd3565b6005556001600160a01b038216600090815260096020526040902054610ccc9082610bd3565b6001600160a01b0383166000818152600960209081526040808320949094558351858152935192939192600080516020610df18339815191529281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373466175636574546f6b656e3a20666f7262696464656e00000000000000000000466175636574546f6b656e3a2064726f706c6574206e6f7420617661696c61626c652079657445524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bc25266ebfbaeb88d715100194ed803f611c0bbdb0e3b169ea64db15bd00df5764736f6c634300060c0033";

export class FaucetToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    dropletAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FaucetToken> {
    return super.deploy(
      name,
      symbol,
      decimals,
      dropletAmount,
      overrides || {}
    ) as Promise<FaucetToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    dropletAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals,
      dropletAmount,
      overrides || {}
    );
  }
  attach(address: string): FaucetToken {
    return super.attach(address) as FaucetToken;
  }
  connect(signer: Signer): FaucetToken__factory {
    return super.connect(signer) as FaucetToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetTokenInterface {
    return new utils.Interface(_abi) as FaucetTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FaucetToken {
    return new Contract(address, _abi, signerOrProvider) as FaucetToken;
  }
}
