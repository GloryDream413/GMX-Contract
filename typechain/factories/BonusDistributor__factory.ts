/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BonusDistributor,
  BonusDistributorInterface,
} from "../BonusDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardTracker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BonusMultiplierChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Distribute",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINTS_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BONUS_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusMultiplierBasisPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDistributionTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTracker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bonusMultiplierBasisPoints",
        type: "uint256",
      },
    ],
    name: "setBonusMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
    ],
    name: "setGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateLastDistributionTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e70380380610e708339818101604052604081101561003357600080fd5b5080516020909101516001600081905580546001600160a01b031990811633908117909255600380546001600160a01b0395861690831617905560058054949093169381169390931790915560068054909216179055610dd8806100986000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c806301e33667146100d5578063126082cf1461010d57806312d43a51146101275780632f6beaa51461014b5780633ae6d6eb146101535780636bcb411a1461015b578063704b6c021461016357806375b1735014610189578063a013ad5414610191578063a8d9362714610199578063cfad57a2146101a1578063e4fc6b6d146101c7578063eded3fda146101cf578063f7c618c1146101d7578063f851a440146101df578063fd58e63a146101e7575b600080fd5b61010b600480360360608110156100eb57600080fd5b506001600160a01b03813581169160208101359091169060400135610204565b005b610115610274565b60408051918252519081900360200190f35b61012f61027a565b604080516001600160a01b039092168252519081900360200190f35b610115610289565b61010b61028f565b61012f6102f2565b61010b6004803603602081101561017957600080fd5b50356001600160a01b0316610301565b61011561037a565b610115610380565b610115610388565b61010b600480360360208110156101b757600080fd5b50356001600160a01b0316610433565b6101156104ac565b6101156105f1565b61012f6106c0565b61012f6106cf565b61010b600480360360208110156101fd57600080fd5b50356106de565b6001546001600160a01b0316331461025b576040805162461bcd60e51b815260206004820152601560248201527423b7bb32b93730b136329d103337b93134b23232b760591b604482015290519081900360640190fd5b61026f6001600160a01b038416838361081c565b505050565b61271081565b6001546001600160a01b031681565b60025481565b6006546001600160a01b031633146102ec576040805162461bcd60e51b815260206004820152601b60248201527a2137b73ab9a234b9ba3934b13aba37b91d103337b93134b23232b760291b604482015290519081900360640190fd5b42600455565b6005546001600160a01b031681565b6001546001600160a01b03163314610358576040805162461bcd60e51b815260206004820152601560248201527423b7bb32b93730b136329d103337b93134b23232b760591b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b6301e1338081565b600080600560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d957600080fd5b505afa1580156103ed573d6000803e3d6000fd5b505050506040513d602081101561040357600080fd5b505160025490915061042c906301e133809061042690612710908290869061086e565b906108d0565b9150505b90565b6001546001600160a01b0316331461048a576040805162461bcd60e51b815260206004820152601560248201527423b7bb32b93730b136329d103337b93134b23232b760591b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6005546000906001600160a01b031633146104f85760405162461bcd60e51b8152600401808060200182810382526024815260200180610d556024913960400191505060405180910390fd5b60006105026105f1565b905080610513576000915050610430565b426004908155600354604080516370a0823160e01b81523093810193909352516000926001600160a01b03909216916370a08231916024808301926020929190829003018186803b15801561056757600080fd5b505afa15801561057b573d6000803e3d6000fd5b505050506040513d602081101561059157600080fd5b50519050808211156105a1578091505b6003546105b8906001600160a01b0316338461081c565b6040805183815290517f4def474aca53bf221d07d9ab0f675b3f6d8d2494b8427271bcf43c018ef1eead9181900360200190a150905090565b600060045442141561060557506000610430565b600554604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561064a57600080fd5b505afa15801561065e573d6000803e3d6000fd5b505050506040513d602081101561067457600080fd5b505160045490915060009061068a90429061090f565b90506106b96301e133806104266127106104266002546106b3888861086e90919063ffffffff16565b9061086e565b9250505090565b6003546001600160a01b031681565b6006546001600160a01b031681565b6006546001600160a01b0316331461073b576040805162461bcd60e51b815260206004820152601b60248201527a2137b73ab9a234b9ba3934b13aba37b91d103337b93134b23232b760291b604482015290519081900360640190fd5b6004546107795760405162461bcd60e51b815260040180806020018281038252602e815260200180610d06602e913960400191505060405180910390fd5b600560009054906101000a90046001600160a01b03166001600160a01b0316633e158b0c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107c957600080fd5b505af11580156107dd573d6000803e3d6000fd5b5050506002829055506040805182815290517f58585e4edc172f6517d6789356504dc9ad23553d02202c3ac454a8d0733f6b2b9181900360200190a150565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261026f908490610951565b60008261087d575060006108ca565b8282028284828161088a57fe5b04146108c75760405162461bcd60e51b8152600401808060200182810382526021815260200180610d346021913960400191505060405180910390fd5b90505b92915050565b60006108c783836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b815250610a02565b60006108c783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610aa6565b60606109a6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b009092919063ffffffff16565b80519091501561026f578080602001905160208110156109c557600080fd5b505161026f5760405162461bcd60e51b815260040180806020018281038252602a815260200180610d79602a913960400191505060405180910390fd5b60008183610a8e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a53578181015183820152602001610a3b565b50505050905090810190601f168015610a805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610a9a57fe5b049150505b9392505050565b60008184841115610af85760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610a53578181015183820152602001610a3b565b505050900390565b6060610b0f8484600085610b17565b949350505050565b606082471015610b585760405162461bcd60e51b8152600401808060200182810382526026815260200180610ce06026913960400191505060405180910390fd5b610b6185610c73565b610bb2576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610bf15780518252601f199092019160209182019101610bd2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610c53576040519150601f19603f3d011682016040523d82523d6000602084013e610c58565b606091505b5091509150610c68828286610c79565b979650505050505050565b3b151590565b60608315610c88575081610a9f565b825115610c985782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315610a53578181015183820152602001610a3b56fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c426f6e75734469737472696275746f723a20696e76616c6964206c617374446973747269627574696f6e54696d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77426f6e75734469737472696275746f723a20696e76616c6964206d73672e73656e6465725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220df81d5232a44e84f560773ef17feafce7261abc84d1996ccd947a8670c663e4764736f6c634300060c0033";

export class BonusDistributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardToken: string,
    _rewardTracker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BonusDistributor> {
    return super.deploy(
      _rewardToken,
      _rewardTracker,
      overrides || {}
    ) as Promise<BonusDistributor>;
  }
  getDeployTransaction(
    _rewardToken: string,
    _rewardTracker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _rewardTracker,
      overrides || {}
    );
  }
  attach(address: string): BonusDistributor {
    return super.attach(address) as BonusDistributor;
  }
  connect(signer: Signer): BonusDistributor__factory {
    return super.connect(signer) as BonusDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BonusDistributorInterface {
    return new utils.Interface(_abi) as BonusDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BonusDistributor {
    return new Contract(address, _abi, signerOrProvider) as BonusDistributor;
  }
}
